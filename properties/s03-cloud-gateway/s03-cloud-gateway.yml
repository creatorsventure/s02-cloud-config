# Logger
logging:
  file:
    name: "./config/log/cloud-gateway.log"

spring:
  # Cloud
  cloud:
    stream:
      bindings:
        springCloudBusInput:
          group: ${app.kafka.cloud-gateway.group}
    gateway:
      routes:
        - id: org-service
          uri: lb://S20-04-ORG-SERVICE-V1
          predicates:
            - Path=/api/v1/org-service/**
          filters:
            - name: CircuitBreaker
              args:
                name: ORGServiceCircuitBreaker
                fallbackUri: forward:/fallback/service-down
        - id: unit-service
          uri: lb://S30-04-UNIT-SERVICE-V1
          predicates:
            - Path=/api/v1/unit-service/**
          filters:
            - name: CircuitBreaker
              args:
                name: UnitServiceCircuitBreaker
                fallbackUri: forward:/fallback/service-down
  kafka:
    client-id: ${app.kafka.cloud-gateway.client-id}
    consumer:
      group-id: ${app.kafka.cloud-gateway.group}
      auto-offset-reset: latest

# Resilience4j
resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true                # Enables actuator health endpoints for circuit breaker
        slidingWindowSize: 10                        # Number of recent calls to monitor for failure/slow response
        minimumNumberOfCalls: 5                      # Minimum calls needed before circuit breaker calculates failure rate
        permittedNumberOfCallsInHalfOpenState: 3     # When half-open, this many trial calls are allowed before deciding
        waitDurationInOpenState: 10s                 # How long to wait before transitioning from open to half-open state
        failureRateThreshold: 50                     # If more than 50% of calls fail, circuit breaker opens
        slowCallDurationThreshold: 4s                # If a call takes longer than this, it’s considered “slow”
        slowCallRateThreshold: 50                    # If more than 50% of calls are slow, breaker may open
    instances:
      ORGServiceCircuitBreaker:
        baseConfig: default                          # Use the above default config
      UnitServiceCircuitBreaker:
        baseConfig: default
        # failureRateThreshold: 60                   # Override just the failure threshold for this service
  retry:
    configs:
      default:
        max-attempts: 3                              # Total retry attempts = 3 (initial + 2 retries)
        waitDuration: 2s                             # Wait 2 seconds between retry attempts
    instances:
      ORGServiceCircuitBreaker:
        base-config: default
      UnitServiceCircuitBreaker:
        baseConfig: default
  ratelimiter:
    configs:
      default:
        limit-refresh-period: 1s                     # Every 1 second, the counter resets
        limitForPeriod: 10                           # Allow 10 requests per period (1s)
        timeoutDuration: 2s                          # Wait max 2 seconds to acquire permission (if rate limit hit)
    instances:
      ORGServiceCircuitBreaker:
        base-config: default
      UnitServiceCircuitBreaker:
        baseConfig: default
  timelimiter:
    configs:
      default:
        timeoutDuration: 4s                          # If a call takes longer than 4s, it's timed out
        cancelRunningFuture: true                    # Cancel the future task if timeout occurs
    instances:
      ORGServiceCircuitBreaker:
        base-config: default
      UnitServiceCircuitBreaker:
        baseConfig: default

# Actuator
management:
  health:
    circuitbreakers:
      enabled: true
    ratelimiters:
      enabled: true
#CORS
cloud-gateway:
  allowed-headers:
    - "Authorization"
    - "Content-Type"
    - "X-Requested-With"
    - "Origin"
    - "Accept"
    - "X-USER-ID"
    - "X-USER-KEY"
    - "X-USER-KEY"
  exposed-headers:
    - "Authorization"
    - "Content-Type"
    - "X-Requested-With"
    - "Origin"
    - "Accept"
  unauthenticated-paths:
    - "/api/v1/org-service/user/count"
    - "/api/v1/org-service/sign-up"
    - "/api/v1/org-service/authentication/login"
    - "/api/v1/org-service/authentication/logout"
    - "/api/v1/org-service/authentication/refresh-token"
    - "/api/v1/org-service/password/activate-account"
    - "/api/v1/org-service/password/reset-password"
    - "/api/v1/org-service/password/forgot-password"
    - "/api/v1/unit-service/sign-up"
    - "/api/v1/unit-service/authentication/login"
    - "/api/v1/unit-service/authentication/logout"
    - "/api/v1/unit-service/authentication/refresh-token"
    - "/api/v1/unit-service/password/activate-account"
    - "/api/v1/unit-service/password/reset-password"
    - "/api/v1/unit-service/password/forgot-password"

# Logger
logging:
  file:
    name: "./config/log/notify-service.log"
#Datasource
spring:
  application:
    name: s04-04-notify-service
  #JPA
  jpa:
    properties:
      spring:
        datasource:
          initialize: true
    hibernate:
      jdbc:
        lob:
          non_contextual_creation: true
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
      ddl-auto: none
    show-sql: true
  # Redis
  data:
    redis:
      repositories:
        enabled: false
  datasource:
    hikari:
      connection-timeout: 20000
      minimum-idle: 10
      maximum-pool-size: 1000
      idle-timeout: 10000
  # Redis Props
  cache:
    type: redis
    redis:
      time-to-live: 60000
  mail:
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  # Kafka
  kafka:
    # Unique identifier for this client instance (for logging, metrics, etc.)
    client-id: s04-04-notify-service

    consumer:
      # Consumer group ID. Consumers with the same group share the load of processing messages
      group-id: s04-04-notify-service-group

      # Where to start reading if no previous offset is found (e.g., "latest", "earliest")
      auto-offset-reset: earliest

      # Do not auto-commit offsets — we will manually acknowledge messages for reliability
      enable-auto-commit: false

      # Deserializer for message keys (usually string-based)
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer

      # Deserializer for message values (you can use JSON for custom objects too)
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

    producer:
      # Wait for full acknowledgment from all Kafka replicas before proceeding
      acks: all

      # Serializer for message keys
      key-serializer: org.apache.kafka.common.serialization.StringSerializer

      # Serializer for message values
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

    listener:
      # If a Kafka topic is missing at startup, don’t crash the app (useful in dev/staging)
      missing-topics-fatal: false

      # Manual ack mode — gives control over when a message is considered "successfully processed"
      ack-mode: manual

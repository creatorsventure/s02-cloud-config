# Dev tools
spring:
  messages:
    encoding: UTF-8
  devtools:
    restart:
      log-condition-evaluation-delta: false
  cloud:
    loadbalancer:
      retry:
        enabled: true
    openfeign:
      client:
        config:
          default:
            connect-timeout: 5000
            read-timeout: 5000
            loggerLevel: full
            request-interceptors:
              - org.springframework.cloud.openfeign.loadbalancer.LoadBalancerRequestInterceptor
    bus:
      enabled: true
      destination: ${app.kafka.config-bus.topic}

# Logger
logging:
  level:
    com.cv: info
    org.hibernate: info
    org.hibernate.SQL: debug
    org.hibernate.orm.jdbc.bind: trace
    org.hibernate.stat: trace
    org.hibernate.SQL_SLOW: info
    org.hibernate.cache: debug
    org.springframework.context.support.ResourceBundleMessageSource: debug
  logback:
    rollingpolicy:
      max-file-size: 100MB
      clean-history-on-start: true
# Server
server:
  shutdown: graceful
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css, application/javascript, application/json
    min-response-size: 1024
  error:
    include-binding-errors: always
    include-message: always
    include-stacktrace: always

#Actuator
management:
  endpoint:
    health:
      show-details: always
  info:
    env:
      enabled: true
  endpoints:
    jmx:
      exposure:
        include: "*"
    web:
      exposure:
        include: "*"
app:
  info:
    author: Ramakrishna
    email: ramakrishna@mail.com
    description: Downstream service API definition.
  cloud-gateway:
    kafka:
      client-id: cloud-gateway
      group: cloud-gateway-group
  org-service:
    name: s20-04-org-service-v1
    contextPath: /api/v1/org-service
    kafka:
      client-id: org-service
      group: org-service-group
  unit-service:
    name: s30-04-unit-service-v1
    contextPath: /api/v1/unit-service
    kafka:
      client-id: unit-service
      group: unit-service-group
  notify-service:
    name: s04-04-notify-service-v1
    kafka:
      client-id: notify-service
      topic: notify-service
      group: notify-service-group
  kafka:
    config-bus:
      topic: cloud-config-bus
